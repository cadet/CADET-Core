// =============================================================================
//  CADET
//  
//  Copyright Â© 2008-2022: The CADET Authors
//            Please see the AUTHORS and CONTRIBUTORS file.
//  
//  All rights reserved. This program and the accompanying materials
//  are made available under the terms of the GNU Public License v3.0 (or, at
//  your option, any later version) which accompanies this distribution, and
//  is available at http://www.gnu.org/licenses/gpl.html
// =============================================================================

#include "cadet/LibVersionInfo.hpp"
#include "cadet/cadet.h"

namespace cadet
{
	const char GIT_COMMIT_HASH[] = "@GIT_SHA1@";
	const char GIT_BRANCH[] = "@GIT_REFSPEC@";
	const char LIBCADET_VERSION[] = "@CADET_VERSION@";
	const char DEPENDENCY_VERSIONS[] = "HDF5=@HDF5_VERSION@;TBB=@TBB_VERSION@;MATLAB=@Matlab_VERSION_STRING@;SUNDIALS=@SUNDIALS_VERSION@;SUPERLU=@SUPERLU_VERSION@;UMFPACK_VERSION=@UMFPACK_VERSION@";
	const char BUILD_TYPE[] = "@CMAKE_BUILD_TYPE@";
	const char COMPILER[] = "@CMAKE_CXX_COMPILER_ID@ @CMAKE_CXX_COMPILER_VERSION@";
	const char BUILD_HOST[] = "@CMAKE_SYSTEM@";
	const char COMPILER_FLAGS[] = "@CMAKE_CXX_FLAGS@";

	const char* getLibraryVersion() CADET_NOEXCEPT
	{
		return cadet::LIBCADET_VERSION;
	}

	const char* getLibraryCommitHash() CADET_NOEXCEPT
	{
		return cadet::GIT_COMMIT_HASH;
	}

	const char* getLibraryBranchRefspec() CADET_NOEXCEPT
	{
		return cadet::GIT_BRANCH;
	}

	const char* getLibraryDependencyVersions() CADET_NOEXCEPT
	{
		return cadet::DEPENDENCY_VERSIONS;
	}

	const char* getLibraryBuildType() CADET_NOEXCEPT
	{
		return cadet::BUILD_TYPE;
	}

	const char* getLibraryCompiler() CADET_NOEXCEPT
	{
		return cadet::COMPILER;
	}

	const char* getLibraryCompilerFlags() CADET_NOEXCEPT
	{
		return cadet::COMPILER_FLAGS;
	}

	const char* getLibraryBuildHost() CADET_NOEXCEPT
	{
		return cadet::BUILD_HOST;
	}
}

extern "C"
{
	
	CADET_API const char* cdtGetLibraryVersion()
	{
		return cadet::getLibraryVersion();
	}

	CADET_API const char* cdtGetLibraryCommitHash()
	{
		return cadet::getLibraryCommitHash();
	}

	CADET_API const char* cdtGetLibraryBranchRefspec()
	{
		return cadet::getLibraryBranchRefspec();
	}
	
	CADET_API const char* cdtGetLibraryDependencyVersions()
	{
		return cadet::getLibraryDependencyVersions();
	}

	CADET_API const char* cdtGetLibraryBuildType()
	{
		return cadet::getLibraryBuildType();
	}

	CADET_API const char* cdtGetLibraryCompiler()
	{
		return cadet::getLibraryCompiler();
	}

	CADET_API const char* cdtGetLibraryCompilerFlags()
	{
		return cadet::getLibraryCompilerFlags();
	}

	CADET_API const char* cdtGetLibraryBuildHost()
	{
		return cadet::getLibraryBuildHost();
	}
}
