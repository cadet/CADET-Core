
# Exclude GitHub pages and AppVeyor branches
branches:
  except:
    - gh-pages
    - /feature\/.*appveyor.*/

language: cpp

# Use Linux unless specified otherwise
os: linux
dist: bionic

git:
  depth: 2

cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/deps

matrix:
  include:

    # Clang on OSX

    # XCode 11.3.1 on OS X 10.14 (clang 8)
    - env: COMPILERCPP=clang++ COMPILERC=clang BUILD_TYPE=Release NTHREADS=2
      os: osx
      osx_image: xcode11.3
      compiler: clang

    # Clang on Linux

    # Clang 7.0
    - env: COMPILERCPP=clang++ COMPILERC=clang BUILD_TYPE=Release NTHREADS=2
      addons:
        apt:
          packages:
            - cmake
            - libblas-dev
            - liblapack-dev
            - libhdf5-dev
            - libsuitesparse-dev
            - libsuperlu-dev

    # GCC on Linux

    # GCC 7.5.0
    - env: COMPILERCPP=g++ COMPILERC=gcc BUILD_TYPE=Release NTHREADS=2
      addons:
        apt:
          packages: 
            - cmake
            - libblas-dev
            - liblapack-dev
            - libhdf5-dev
            - libsuitesparse-dev
            - libsuperlu-dev

before_install:
  # Dependencies required by the CI are installed in ${TRAVIS_BUILD_DIR}/deps/
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p "${DEPS_DIR}"
  - cd "${DEPS_DIR}"
  # OSX: Install packages
  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew update
      brew install cmake --without-docs || brew upgrade cmake
      brew install hdf5 || brew upgrade hdf5
      brew install tbb || brew upgrade tbb
      brew install suite-sparse || brew upgrade suite-sparse
    fi
  - export CXX=${COMPILERCPP}
  - export CC=${COMPILERC}
  - ${CC} --version
  - ${CXX} --version
  # Travis machines have 2 cores
  - JOBS=2
  # Linux: Install a recent CMake
  - CMAKE_VERSION=3.17.0
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v${CMAKE_VERSION%.[0-9]}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    fi
  - cmake --version
  # Linux: Install TBB
  - |
    TBB_INSTALL=${DEPS_DIR}/tbb/install
    TBB_VERSION="2020_U2"
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      if [[ ! -d "${DEPS_DIR}/tbb" || ! -d "${TBB_INSTALL}" ]]; then
        TBB_URL="https://github.com/01org/tbb/archive/${TBB_VERSION}.tar.gz"
        mkdir -p tbb
        travis_retry wget -O - ${TBB_URL} | tar --strip-components=1 -xz -C tbb
        TBB_BUILD=${DEPS_DIR}/tbb/build
        if [[ "${CXX%%+*}" == "clang" ]]; then
          (cd tbb && make compiler=clang stdver=c++14 tbb_build_dir=${TBB_BUILD} -j${JOBS})
          (cd tbb && make tbb_cpf=1 compiler=clang stdver=c++14 tbb_build_dir=${TBB_BUILD} -j${JOBS})
        else
          (cd tbb && make compiler=gcc stdver=c++14 tbb_build_dir=${TBB_BUILD} -j${JOBS})
          (cd tbb && make tbb_cpf=1 compiler=gcc stdver=c++14 tbb_build_dir=${TBB_BUILD} -j${JOBS})
        fi
        mkdir -p ${TBB_INSTALL}/lib
        mkdir -p ${TBB_INSTALL}/include
        (cd tbb && cp -r include/tbb ${TBB_INSTALL}/include/)
        find ${TBB_BUILD} -iname '*.so*' -exec cp {} ${TBB_INSTALL}/lib/ \;
        mkdir -p ${TBB_INSTALL}/lib/intel64
        ln -s ${TBB_INSTALL}/lib ${TBB_INSTALL}/lib/intel64/gcc4.4
      fi
      export TBB_ROOT="${TBB_INSTALL}"
      export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${TBB_INSTALL}/lib"
      export LIBRARY_PATH="${LIBRARY_PATH}:${TBB_INSTALL}/lib"
    fi

before_script:
  # Configure CMake
  - cd "${TRAVIS_BUILD_DIR}"
  - mkdir build && cd build
  - cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_INSTALL_PREFIX=${TRAVIS_BUILD_DIR}/install -DENABLE_CADET_MEX=OFF
  
script:
  # Build and run tests
  - make install -j${JOBS}
  - test/testRunner -d yes --tbbthreads ${NTHREADS} [ci]
